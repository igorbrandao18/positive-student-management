@model PositiveStudentManagement.Models.Student

@{
    ViewData["Title"] = "Student Details";
}

<h2>Student Details</h2>
<hr />

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Personal Information</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Student ID:</dt>
                    <dd class="col-sm-8"><span class="badge bg-primary">@Model.StudentId</span></dd>
                    
                    <dt class="col-sm-4">Full Name:</dt>
                    <dd class="col-sm-8">@Model.FullName</dd>
                    
                    <dt class="col-sm-4">Date of Birth:</dt>
                    <dd class="col-sm-8">@Model.DateOfBirth.ToString("MMMM dd, yyyy")</dd>
                    
                    <dt class="col-sm-4">Age:</dt>
                    <dd class="col-sm-8"><span class="badge bg-info">@Model.Age years old</span></dd>
                    
                    <dt class="col-sm-4">Grade:</dt>
                    <dd class="col-sm-8"><span class="badge bg-secondary">@Model.Grade</span></dd>
                    
                    <dt class="col-sm-4">Education Level:</dt>
                    <dd class="col-sm-8">@Model.EducationLevel</dd>
                </dl>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Address Information</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Address Type:</dt>
                    <dd class="col-sm-8"><span class="badge bg-warning">@Model.AddressType</span></dd>
                    
                    <dt class="col-sm-4">Street:</dt>
                    <dd class="col-sm-8">@Model.Street</dd>
                    
                    <dt class="col-sm-4">Number:</dt>
                    <dd class="col-sm-8">@Model.Number</dd>
                    
                    <dt class="col-sm-4">ZIP Code:</dt>
                    <dd class="col-sm-8">@Model.ZipCode</dd>
                    
                    @if (!string.IsNullOrEmpty(Model.Complement))
                    {
                        <dt class="col-sm-4">Complement:</dt>
                        <dd class="col-sm-8">@Model.Complement</dd>
                    }
                </dl>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Parents Information</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Father's Name:</dt>
                    <dd class="col-sm-8">@Model.FatherName</dd>
                    
                    <dt class="col-sm-4">Mother's Name:</dt>
                    <dd class="col-sm-8">@Model.MotherName</dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<div class="mt-4">
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit Student</a>
    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete Student</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<style>
/* Details Section */
.details-section {
    padding: var(--space-20) 0;
    background: rgba(255, 255, 255, 0.5);
}

.details-container {
    max-width: 900px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: var(--space-8);
}

.detail-card {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(20px);
    border-radius: var(--radius-2xl);
    box-shadow: var(--shadow-lg);
    border: 1px solid rgba(255, 255, 255, 0.2);
    overflow: hidden;
    transition: all var(--transition-normal);
}

.detail-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-2xl);
}

.card-header {
    background: var(--gradient-primary);
    color: var(--positive-white);
    padding: var(--space-6);
}

.card-title {
    font-size: var(--font-size-xl);
    font-weight: 700;
    margin: 0;
    display: flex;
    align-items: center;
    gap: var(--space-2);
}

.card-content {
    padding: var(--space-8);
}

.detail-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-6);
}

.detail-item {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
}

.detail-item.full-width {
    grid-column: 1 / -1;
}

.detail-label {
    font-weight: 600;
    color: var(--positive-gray-700);
    font-size: var(--font-size-sm);
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.detail-value {
    font-size: var(--font-size-base);
    color: var(--positive-gray-800);
    display: flex;
    align-items: center;
    gap: var(--space-2);
    flex-wrap: wrap;
}

.id-badge {
    background: var(--gradient-primary);
    color: var(--positive-white);
    padding: var(--space-1) var(--space-3);
    border-radius: var(--radius-full);
    font-size: var(--font-size-sm);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.date-value {
    font-weight: 500;
}

.age-badge {
    padding: var(--space-1) var(--space-3);
    border-radius: var(--radius-full);
    font-size: var(--font-size-sm);
    font-weight: 600;
    text-align: center;
}

.age-early {
    background: linear-gradient(135deg, #fbbf24, #f59e0b);
    color: var(--positive-white);
}

.age-elementary {
    background: linear-gradient(135deg, #10b981, #059669);
    color: var(--positive-white);
}

.age-middle {
    background: linear-gradient(135deg, #3b82f6, #2563eb);
    color: var(--positive-white);
}

.age-high {
    background: linear-gradient(135deg, #8b5cf6, #7c3aed);
    color: var(--positive-white);
}

.grade-badge {
    background: var(--gradient-secondary);
    color: var(--positive-white);
    padding: var(--space-1) var(--space-3);
    border-radius: var(--radius-full);
    font-size: var(--font-size-sm);
    font-weight: 600;
}

.education-level {
    font-weight: 500;
    color: var(--positive-primary);
}

.address-type-badge {
    background: var(--gradient-accent);
    color: var(--positive-white);
    padding: var(--space-1) var(--space-3);
    border-radius: var(--radius-full);
    font-size: var(--font-size-sm);
    font-weight: 600;
}

.zip-code {
    font-family: 'Courier New', monospace;
    font-weight: 600;
    color: var(--positive-gray-700);
}

.address-complete {
    background: rgba(102, 126, 234, 0.05);
    padding: var(--space-3);
    border-radius: var(--radius-lg);
    border-left: 4px solid var(--positive-primary);
    font-weight: 500;
}

.actions-card {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(20px);
    border-radius: var(--radius-2xl);
    padding: var(--space-8);
    box-shadow: var(--shadow-lg);
    border: 1px solid rgba(255, 255, 255, 0.2);
    text-align: center;
}

.actions-grid {
    display: flex;
    gap: var(--space-4);
    justify-content: center;
    flex-wrap: wrap;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .details-container {
        margin: 0 var(--space-4);
    }
    
    .detail-grid {
        grid-template-columns: 1fr;
    }
    
    .actions-grid {
        flex-direction: column;
        align-items: center;
    }
    
    .btn-positive {
        width: 100%;
        max-width: 300px;
    }
}

@@media (max-width: 480px) {
    .details-container {
        margin: 0 var(--space-2);
    }
    
    .card-content {
        padding: var(--space-6);
    }
    
    .actions-card {
        padding: var(--space-6);
    }
}
</style>
